# add number line to side of screen
add-highlighter global/ number-lines -hlcursor
add-highlighter global/ show-matching

colorscheme gruvbox

# convenient mappings (easy commands, comments, etc.)
map global normal ";" ":"
map global normal / /(?i)
map global normal <a-/> <a-/>(?i)
map global normal "#" ": comment-line<ret>"

# change indentation in insert mode with tab
map global insert <tab> '<a-;><gt>'
map global insert <s-tab> '<a-;><lt>'

# use tab for completion
hook global InsertCompletionShow .* %{
    try %{
        exec -draft 'h<a-K>\h<ret>'
        map window insert <s-tab> <c-p>
        map window insert <tab> <c-n>
    }
}
hook global InsertCompletionHide .* %{
    unmap window insert <tab> <c-n>
    unmap window insert <s-tab> <c-p>
}

# set tab widths per language
hook global WinSetOption filetype=(java|rust|python) %{ set-option buffer indentwidth 4 }
hook global WinSetOption filetype=(elm|crystal|javascript|typescript|purescript|css|html) %{ set-option buffer indentwidth 2 }


# import plug.kak
source "%val{config}/plugins/plug.kak/rc/plug.kak"

# import plugins
plug "robertmeta/plug.kak" noload
plug "occivink/kakoune-sudo-write"
plug "alexherbo2/auto-pairs.kak"
plug "alexherbo2/explore.kak" 
plug "TeddyDD/kakoune-mint"
plug "alexherbo2/prelude.kak"
plug "alexherbo2/auto-pairs.kak"
plug "lePerdu/kakboard" %{
    hook global WinCreate .* %{ kakboard-enable }
}
plug "alexherbo2/move-line.kak" config %{
    map global normal <down> ': move-line-below<ret>'
    map global normal <up> ': move-line-above<ret>'
}
plug "alexherbo2/surround.kak" %{
    # Quoting
    map global normal q ': enter-user-mode surround<ret>'
    map global normal Q ': surround-enter-insert-mode<ret>'
    # Move macros to ^
    map global normal ^ q
    map global normal <a-^> Q
}
plug "jdugan6240/powerline.kak" defer powerline %{
    set-option global powerline_format 'bufname filetype mode_info line_column position'
    powerline-theme gruvbox
} config %{
    powerline-start
}

# setup lsp plugin
plug "ul/kak-lsp" do %{
    cargo build --release --locked
    cargo install --force --path .
} config %{
    set global lsp_diagnostic_line_error_sign '║'
    set global lsp_diagnostic_line_warning_sign '┊'
    set global lsp_hover_max_lines 20

    define-command ne -docstring 'go to next error/warning from lsp' %{ lsp-find-error --include-warnings }
    define-command pe -docstring 'go to previous error/warning from lsp' %{ lsp-find-error --previous --include-warnings }
    define-command ee -docstring 'go to current error/warning from lsp' %{ lsp-find-error --include-warnings; lsp-find-error --previous --include-warnings }

    hook global WinSetOption filetype=(c|cpp|rust|elm|typescript|javascript|crystal) %{
        map window user "l" ": enter-user-mode lsp<ret>" -docstring "LSP mode"
        lsp-enable-window
        lsp-auto-hover-enable
        lsp-auto-hover-insert-mode-disable
        set-option window lsp_hover_anchor true
        set-face window DiagnosticError default+u
        set-face window DiagnosticWarning default+u
        lsp-formatting-sync
    }

    hook global WinSetOption filetype=rust %{
        set-option window lsp_server_configuration rust.clippy_preference="on"
    }

    hook global KakEnd .* lsp-exit
}

hook global WinSetOption filetype=rust %{
  hook window -group rust-inlay-hints BufReload .* rust-analyzer-inlay-hints
  hook window -group rust-inlay-hints NormalIdle .* rust-analyzer-inlay-hints
  hook window -group rust-inlay-hints InsertIdle .* rust-analyzer-inlay-hints
  hook -once -always window WinSetOption filetype=.* %{
    remove-hooks window rust-inlay-hints
  }
}
